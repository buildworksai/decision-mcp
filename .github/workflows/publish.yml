name: Publish

on:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Publish to npmjs (unscoped)
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish

      - name: Configure GitHub Packages registry
        run: |
          cp package.json package.npm.json
          node -e '
            const fs = require("fs");
            const pkg = JSON.parse(fs.readFileSync("package.json", "utf8"));
            pkg.name = "@buildworksai/decision-mcp";
            pkg.publishConfig = { registry: "https://npm.pkg.github.com" };
            fs.writeFileSync("package.json", JSON.stringify(pkg, null, 2));
          '
          echo "@buildworksai:registry=https://npm.pkg.github.com" >> ~/.npmrc
          echo "//npm.pkg.github.com/:_authToken=${GITHUB_TOKEN}" >> ~/.npmrc
          npm config set always-auth true

      - name: Setup Node.js for GitHub Packages
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: https://npm.pkg.github.com
          scope: '@buildworksai'

      - name: Publish to GitHub Packages (scoped)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm publish

      - name: Restore package.json
        run: mv -f package.npm.json package.json

